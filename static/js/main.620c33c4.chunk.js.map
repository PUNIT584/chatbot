{"version":3,"sources":["firebase.js","Chatbot/chatbotapp.js","Auth/Login.js","Auth/Signup.js","Auth/PrivateRoute.js","App.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","db","getFirestore","ChatGPTComponent","user","setUser","useState","userMessage","setUserMessage","chatHistory","setChatHistory","error","setError","navigate","useNavigate","loading","setLoading","useEffect","unsubscribe","onAuthStateChanged","currentUser","loadChatHistory","uid","async","chatDoc","doc","chatSnap","getDoc","exists","data","messages","err","console","logoutButtonStyle","padding","fontSize","backgroundColor","color","border","borderRadius","cursor","transition","logoutButtonHover","messageStyle","marginBottom","display","flexDirection","userMessageStyle","alignSelf","maxWidth","wordBreak","botMessageStyle","sendButtonStyle","sendButtonHover","clearButtonStyle","marginTop","clearButtonHover","React","createElement","style","height","justifyContent","alignItems","margin","marginRight","email","onClick","window","confirm","signOut","aria-label","onMouseOver","e","target","onMouseOut","disabled","flex","overflowY","boxShadow","length","textAlign","map","message","index","key","role","content","type","value","onChange","placeholder","outline","onFocus","borderColor","onBlur","trim","options","method","url","headers","x-rapidapi-key","process","x-rapidapi-host","Content-Type","web_access","botMessage","axios","request","result","updatedChatHistory","setDoc","merge","saveChatHistory","Login","setEmail","password","setPassword","fontFamily","onSubmit","preventDefault","signInWithEmailAndPassword","required","width","href","textDecoration","Signup","createUserWithEmailAndPassword","PrivateRoute","_ref","children","Navigate","to","App","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.620c33c4.chunk.js","sourcesContent":["// src/firebase.js\r\n\r\nimport { initializeApp } from 'firebase/app';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { getFirestore } from 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyD-o3-RoXE8QBOhxWAti5zNavhbC64D02E\",\r\n    authDomain: \"chatgpt-app-bf682.firebaseapp.com\",\r\n    projectId: \"chatgpt-app-bf682\",\r\n    storageBucket: \"chatgpt-app-bf682.appspot.com\",\r\n    messagingSenderId: \"108494971572\",\r\n    appId: \"1:108494971572:web:5206df2579166a966dade1\",\r\n    measurementId: \"G-YD2X1B58MG\"\r\n  };\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n// Initialize services\r\nconst auth = getAuth(app);\r\nconst db = getFirestore(app);\r\n\r\nexport { auth, db };\r\n","// src/Chatbot/Chatbotapp.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { db, auth } from '../firebase';\r\nimport { doc, setDoc, getDoc } from 'firebase/firestore';\r\nimport { onAuthStateChanged, signOut } from 'firebase/auth';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst ChatGPTComponent = () => {\r\n    const [user, setUser] = useState(null);\r\n    const [userMessage, setUserMessage] = useState('');\r\n    const [chatHistory, setChatHistory] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    const navigate = useNavigate();\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    // Listen for authentication state changes\r\n    useEffect(() => {\r\n        const unsubscribe = onAuthStateChanged(auth, (currentUser) => {\r\n            setUser(currentUser);\r\n            if (currentUser) {\r\n                loadChatHistory(currentUser.uid);\r\n            } else {\r\n                setChatHistory([]); // Clear chat history if not logged in\r\n            }\r\n        });\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n    // Function to load chat history from Firestore\r\n    const loadChatHistory = async (uid) => {\r\n        try {\r\n            const chatDoc = doc(db, 'chats', uid);\r\n            const chatSnap = await getDoc(chatDoc);\r\n            if (chatSnap.exists()) {\r\n                setChatHistory(chatSnap.data().messages);\r\n            }\r\n        } catch (err) {\r\n            console.error('Error loading chat history:', err);\r\n            setError('Failed to load chat history.');\r\n        }\r\n    };\r\n\r\n    // Function to save chat history to Firestore\r\n    const saveChatHistory = async (uid, messages) => {\r\n        try {\r\n            const chatDoc = doc(db, 'chats', uid);\r\n            await setDoc(chatDoc, { messages }, { merge: true });\r\n        } catch (err) {\r\n            console.error('Error saving chat history:', err);\r\n            setError('Failed to save chat history.');\r\n        }\r\n    };\r\n\r\n    const handleSendMessage = async () => {\r\n        if (!user) {\r\n            setError('You must be logged in to send messages.');\r\n            return;\r\n        }\r\n\r\n        if (userMessage.trim() === '') return;\r\n\r\n        const options = {\r\n            method: 'POST',\r\n            url: 'https://chatgpt-42.p.rapidapi.com/chatgpt',\r\n            headers: {\r\n                'x-rapidapi-key': process.env.REACT_APP_RAPIDAPI_KEY, // Use environment variable\r\n                'x-rapidapi-host': 'chatgpt-42.p.rapidapi.com',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            data: {\r\n                messages: [\r\n                    {\r\n                        role: 'user',\r\n                        content: userMessage,\r\n                    },\r\n                ],\r\n                web_access: false,\r\n            },\r\n        };\r\n\r\n        try {\r\n            const response = await axios.request(options);\r\n            const botMessage = response.data.result;\r\n\r\n            const updatedChatHistory = [\r\n                ...chatHistory,\r\n                { role: 'user', content: userMessage },\r\n                { role: 'assistant', content: botMessage },\r\n            ];\r\n\r\n            setChatHistory(updatedChatHistory);\r\n            setUserMessage('');\r\n            saveChatHistory(user.uid, updatedChatHistory);\r\n        } catch (error) {\r\n            setError('Error fetching data');\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    // Function to clear chat history from Firestore\r\n    const clearChatHistory = async () => {\r\n        if (!user) return;\r\n        try {\r\n            setChatHistory([]);\r\n            const chatDoc = doc(db, 'chats', user.uid);\r\n            await setDoc(chatDoc, { messages: [] }, { merge: true });\r\n        } catch (err) {\r\n            console.error('Error clearing chat history:', err);\r\n            setError('Failed to clear chat history.');\r\n        }\r\n    };\r\n\r\n    // Function to handle logout\r\n    const handleLogout = async () => {\r\n        const confirmLogout = window.confirm('Are you sure you want to log out?');\r\n        if (!confirmLogout) return;\r\n    \r\n        setLoading(true);\r\n        try {\r\n            await signOut(auth);\r\n            navigate('/login'); // Redirect to the login page after logout\r\n        } catch (err) {\r\n            console.error('Error signing out: ', err);\r\n            setError('Failed to log out. Please try again.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // Styles\r\n    const containerStyle = {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        height: '100vh',\r\n        backgroundColor: '#f5f5f5',\r\n    };\r\n\r\n    const headerStyle = {\r\n        padding: '20px',\r\n        backgroundColor: '#007BFF',\r\n        color: 'white',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        borderRadius: '0 0 10px 10px',\r\n    };\r\n\r\n    const titleStyle = {\r\n        margin: 0,\r\n        fontSize: '1.5rem',\r\n    };\r\n\r\n    const logoutButtonStyle = {\r\n        padding: '8px 12px',\r\n        fontSize: '0.9rem',\r\n        backgroundColor: '#dc3545',\r\n        color: 'white',\r\n        border: 'none',\r\n        borderRadius: '4px',\r\n        cursor: 'pointer',\r\n        transition: 'background-color 0.3s',\r\n    };\r\n\r\n    const logoutButtonHover = {\r\n        backgroundColor: '#c82333',\r\n    };\r\n\r\n    const chatContainerStyle = {\r\n        flex: 1,\r\n        padding: '20px',\r\n        overflowY: 'auto',\r\n        backgroundColor: '#ffffff',\r\n        borderRadius: '10px',\r\n        boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\r\n        margin: '20px',\r\n    };\r\n\r\n    const messageStyle = {\r\n        marginBottom: '15px',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    };\r\n\r\n    const userMessageStyle = {\r\n        alignSelf: 'flex-end',\r\n        backgroundColor: '#007BFF',\r\n        color: 'white',\r\n        padding: '10px 15px',\r\n        borderRadius: '20px 20px 0 20px',\r\n        maxWidth: '70%',\r\n        wordBreak: 'break-word',\r\n    };\r\n\r\n    const botMessageStyle = {\r\n        alignSelf: 'flex-start',\r\n        backgroundColor: '#e9ecef',\r\n        color: '#212529',\r\n        padding: '10px 15px',\r\n        borderRadius: '20px 20px 20px 0',\r\n        maxWidth: '70%',\r\n        wordBreak: 'break-word',\r\n    };\r\n\r\n    const inputContainerStyle = {\r\n        display: 'flex',\r\n        padding: '20px',\r\n        backgroundColor: '#ffffff',\r\n        borderRadius: '10px',\r\n        boxShadow: '0 -4px 6px rgba(0, 0, 0, 0.1)',\r\n        margin: '0 20px 20px 20px',\r\n    };\r\n\r\n    const inputStyle = {\r\n        flex: 1,\r\n        padding: '10px 15px',\r\n        fontSize: '1rem',\r\n        border: '1px solid #ccc',\r\n        borderRadius: '20px',\r\n        marginRight: '10px',\r\n        outline: 'none',\r\n        transition: 'border-color 0.3s',\r\n    };\r\n\r\n    const sendButtonStyle = {\r\n        padding: '10px 20px',\r\n        fontSize: '1rem',\r\n        backgroundColor: '#28a745',\r\n        color: 'white',\r\n        border: 'none',\r\n        borderRadius: '20px',\r\n        cursor: 'pointer',\r\n        transition: 'background-color 0.3s',\r\n    };\r\n\r\n    const sendButtonHover = {\r\n        backgroundColor: '#218838',\r\n    };\r\n\r\n    const clearButtonStyle = {\r\n        padding: '8px 12px',\r\n        fontSize: '0.9rem',\r\n        backgroundColor: '#ffc107',\r\n        color: '#212529',\r\n        border: 'none',\r\n        borderRadius: '4px',\r\n        cursor: 'pointer',\r\n        marginTop: '10px',\r\n        transition: 'background-color 0.3s',\r\n    };\r\n\r\n    const clearButtonHover = {\r\n        backgroundColor: '#e0a800',\r\n    };\r\n\r\n    const errorStyle = {\r\n        color: '#dc3545',\r\n        textAlign: 'center',\r\n        marginTop: '10px',\r\n    };\r\n\r\n    return (\r\n        <div style={containerStyle}>\r\n            {/* Header */}\r\n            <div style={headerStyle}>\r\n                <h2 style={titleStyle}>ChatBot</h2>\r\n                {user && (\r\n                    <div>\r\n                        <span style={{ marginRight: '15px', fontSize: '0.9rem' }}>Logged in as : {user.email}</span>\r\n                        <button\r\n                            onClick={handleLogout}\r\n                            aria-label=\"Log Out\"\r\n                            style={logoutButtonStyle}\r\n                            onMouseOver={(e) => e.target.style.backgroundColor = logoutButtonHover.backgroundColor}\r\n                            onMouseOut={(e) => e.target.style.backgroundColor = logoutButtonStyle.backgroundColor}\r\n                            disabled={loading}\r\n                        >\r\n                            {loading ? 'Logging Out...' : 'Log Out'}\r\n                        </button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* Chat History */}\r\n            <div style={chatContainerStyle}>\r\n                {chatHistory.length === 0 && (\r\n                    <p style={{ textAlign: 'center', color: '#6c757d' }}>Start chatting by typing a message below!</p>\r\n                )}\r\n                {chatHistory.map((message, index) => (\r\n                    <div key={index} style={messageStyle}>\r\n                        <div\r\n                            style={message.role === 'user' ? userMessageStyle : botMessageStyle}\r\n                        >\r\n                            {message.content}\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            {/* Input and Buttons */}\r\n            <div style={inputContainerStyle}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={userMessage}\r\n                    onChange={(e) => setUserMessage(e.target.value)}\r\n                    placeholder=\"Type your message...\"\r\n                    style={inputStyle}\r\n                    onFocus={(e) => e.target.style.borderColor = '#80bdff'}\r\n                    onBlur={(e) => e.target.style.borderColor = '#ccc'}\r\n                />\r\n                <button\r\n                    onClick={handleSendMessage}\r\n                    style={sendButtonStyle}\r\n                    onMouseOver={(e) => e.target.style.backgroundColor = sendButtonHover.backgroundColor}\r\n                    onMouseOut={(e) => e.target.style.backgroundColor = sendButtonStyle.backgroundColor}\r\n                >\r\n                    Send\r\n                </button>\r\n            </div>\r\n\r\n            {/* Clear Chat History Button */}\r\n            <div style={{ display: 'flex', justifyContent: 'center', marginBottom: '20px' }}>\r\n                <button\r\n                    onClick={clearChatHistory}\r\n                    style={clearButtonStyle}\r\n                    onMouseOver={(e) => e.target.style.backgroundColor = clearButtonHover.backgroundColor}\r\n                    onMouseOut={(e) => e.target.style.backgroundColor = clearButtonStyle.backgroundColor}\r\n                >\r\n                    Clear Chat History\r\n                </button>\r\n            </div>\r\n\r\n            {/* Error Message */}\r\n            {error && <p style={errorStyle}>{error}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatGPTComponent;\r\n","// src/Auth/Login.js\r\n\r\nimport React, { useState } from 'react';\r\nimport { auth } from '../firebase';\r\nimport { signInWithEmailAndPassword } from 'firebase/auth';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await signInWithEmailAndPassword(auth, email, password);\r\n      navigate('/');\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{\r\n      padding: '20px',\r\n      maxWidth: '400px',\r\n      margin: '0 auto',\r\n      fontFamily: 'Arial, sans-serif',\r\n      backgroundColor: '#f7f7f7',\r\n      borderRadius: '8px',\r\n      boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.1)',\r\n      textAlign: 'center'\r\n    }}>\r\n      <h2 style={{ fontSize: '1.5rem', marginBottom: '20px' }}>Log In</h2>\r\n      \r\n      {/* Error Message */}\r\n      {error && <p style={{ color: 'red', marginBottom: '10px' }}>{error}</p>}\r\n\r\n      <form onSubmit={handleLogin}>\r\n        {/* Email Input */}\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n          style={{\r\n            width: '100%',\r\n            padding: '10px',\r\n            marginBottom: '10px',\r\n            border: '1px solid #ccc',\r\n            borderRadius: '4px',\r\n            fontSize: '1rem'\r\n          }}\r\n        />\r\n\r\n        {/* Password Input */}\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n          style={{\r\n            width: '100%',\r\n            padding: '10px',\r\n            marginBottom: '10px',\r\n            border: '1px solid #ccc',\r\n            borderRadius: '4px',\r\n            fontSize: '1rem'\r\n          }}\r\n        />\r\n\r\n        {/* Login Button */}\r\n        <button \r\n          type=\"submit\" \r\n          style={{\r\n            padding: '10px 0',\r\n            width: '100%',\r\n            backgroundColor: '#007BFF',\r\n            color: 'white',\r\n            border: 'none',\r\n            borderRadius: '4px',\r\n            fontSize: '1rem',\r\n            cursor: 'pointer',\r\n            transition: 'background-color 0.3s'\r\n          }}\r\n          onMouseOver={(e) => e.target.style.backgroundColor = '#0056b3'}\r\n          onMouseOut={(e) => e.target.style.backgroundColor = '#007BFF'}\r\n        >\r\n          Log In\r\n        </button>\r\n      </form>\r\n\r\n      <p style={{ marginTop: '15px' }}>\r\n        Don't have an account? <a href=\"/signup\" style={{ color: '#007BFF', textDecoration: 'none' }}>Sign Up</a>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","// src/Auth/Signup.js\r\n\r\nimport React, { useState } from 'react';\r\nimport { auth } from '../firebase';\r\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Signup = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleSignup = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await createUserWithEmailAndPassword(auth, email, password);\r\n      navigate('/');\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{\r\n      padding: '20px',\r\n      maxWidth: '400px',\r\n      margin: '0 auto',\r\n      fontFamily: 'Arial, sans-serif',\r\n      backgroundColor: '#f7f7f7',\r\n      borderRadius: '8px',\r\n      boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.1)',\r\n      textAlign: 'center'\r\n    }}>\r\n      <h2 style={{ fontSize: '1.5rem', marginBottom: '20px' }}>Sign Up</h2>\r\n\r\n      {/* Error Message */}\r\n      {error && <p style={{ color: 'red', marginBottom: '10px' }}>{error}</p>}\r\n\r\n      <form onSubmit={handleSignup}>\r\n        {/* Email Input */}\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n          style={{\r\n            width: '100%',\r\n            padding: '10px',\r\n            marginBottom: '10px',\r\n            border: '1px solid #ccc',\r\n            borderRadius: '4px',\r\n            fontSize: '1rem'\r\n          }}\r\n        />\r\n\r\n        {/* Password Input */}\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n          style={{\r\n            width: '100%',\r\n            padding: '10px',\r\n            marginBottom: '10px',\r\n            border: '1px solid #ccc',\r\n            borderRadius: '4px',\r\n            fontSize: '1rem'\r\n          }}\r\n        />\r\n\r\n        {/* Signup Button */}\r\n        <button\r\n          type=\"submit\"\r\n          style={{\r\n            padding: '10px 0',\r\n            width: '100%',\r\n            backgroundColor: '#28A745',\r\n            color: 'white',\r\n            border: 'none',\r\n            borderRadius: '4px',\r\n            fontSize: '1rem',\r\n            cursor: 'pointer',\r\n            transition: 'background-color 0.3s'\r\n          }}\r\n          onMouseOver={(e) => e.target.style.backgroundColor = '#218838'}\r\n          onMouseOut={(e) => e.target.style.backgroundColor = '#28A745'}\r\n        >\r\n          Sign Up\r\n        </button>\r\n      </form>\r\n\r\n      <p style={{ marginTop: '15px' }}>\r\n        Already have an account? <a href=\"/login\" style={{ color: '#007BFF', textDecoration: 'none' }}>Log In</a>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","// src/Auth/PrivateRoute.js\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { auth } from '../firebase';\r\nimport { onAuthStateChanged } from 'firebase/auth';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, (currentUser) => {\r\n      setUser(currentUser);\r\n      setLoading(false);\r\n    });\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return user ? children : <Navigate to=\"/login\" />;\r\n};\r\n\r\nexport default PrivateRoute;\r\n","// src/App.js\n\nimport './App.css';\nimport React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport ChatGPTComponent from './Chatbot/chatbotapp';\nimport Login from './Auth/Login';\nimport Signup from './Auth/Signup';\nimport PrivateRoute from './Auth/PrivateRoute';\n\nfunction App() {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/login\" element={<Login />} />\n        <Route path=\"/signup\" element={<Signup />} />\n        <Route \n          path=\"/\" \n          element={\n            <PrivateRoute>\n              <ChatGPTComponent />\n            </PrivateRoute>\n          } \n        />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import { HashRouter as Router } from 'react-router-dom';\n\n// // Then wrap your application with Router\n// <Router>\n//   <App />\n// </Router>\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}